// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        (unknown)
// source: proto/mediawiki.proto

package mediawikipb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetViewsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Pageids       []string               `protobuf:"bytes,1,rep,name=pageids,proto3" json:"pageids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetViewsRequest) Reset() {
	*x = GetViewsRequest{}
	mi := &file_proto_mediawiki_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetViewsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetViewsRequest) ProtoMessage() {}

func (x *GetViewsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mediawiki_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetViewsRequest.ProtoReflect.Descriptor instead.
func (*GetViewsRequest) Descriptor() ([]byte, []int) {
	return file_proto_mediawiki_proto_rawDescGZIP(), []int{0}
}

func (x *GetViewsRequest) GetPageids() []string {
	if x != nil {
		return x.Pageids
	}
	return nil
}

type GetViewsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PageViews     map[string]uint64      `protobuf:"bytes,1,rep,name=page_views,json=pageViews,proto3" json:"page_views,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetViewsResponse) Reset() {
	*x = GetViewsResponse{}
	mi := &file_proto_mediawiki_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetViewsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetViewsResponse) ProtoMessage() {}

func (x *GetViewsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mediawiki_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetViewsResponse.ProtoReflect.Descriptor instead.
func (*GetViewsResponse) Descriptor() ([]byte, []int) {
	return file_proto_mediawiki_proto_rawDescGZIP(), []int{1}
}

func (x *GetViewsResponse) GetPageViews() map[string]uint64 {
	if x != nil {
		return x.PageViews
	}
	return nil
}

type GetThumbnailsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Width         uint32                 `protobuf:"varint,1,opt,name=width,proto3" json:"width,omitempty"`
	Height        uint32                 `protobuf:"varint,2,opt,name=height,proto3" json:"height,omitempty"`
	Pageids       []string               `protobuf:"bytes,3,rep,name=pageids,proto3" json:"pageids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetThumbnailsRequest) Reset() {
	*x = GetThumbnailsRequest{}
	mi := &file_proto_mediawiki_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetThumbnailsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetThumbnailsRequest) ProtoMessage() {}

func (x *GetThumbnailsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mediawiki_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetThumbnailsRequest.ProtoReflect.Descriptor instead.
func (*GetThumbnailsRequest) Descriptor() ([]byte, []int) {
	return file_proto_mediawiki_proto_rawDescGZIP(), []int{2}
}

func (x *GetThumbnailsRequest) GetWidth() uint32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *GetThumbnailsRequest) GetHeight() uint32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *GetThumbnailsRequest) GetPageids() []string {
	if x != nil {
		return x.Pageids
	}
	return nil
}

type GetThumbnailsResponse struct {
	state         protoimpl.MessageState    `protogen:"open.v1"`
	Thumbnails    map[string]*ThumbnailData `protobuf:"bytes,1,rep,name=thumbnails,proto3" json:"thumbnails,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetThumbnailsResponse) Reset() {
	*x = GetThumbnailsResponse{}
	mi := &file_proto_mediawiki_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetThumbnailsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetThumbnailsResponse) ProtoMessage() {}

func (x *GetThumbnailsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mediawiki_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetThumbnailsResponse.ProtoReflect.Descriptor instead.
func (*GetThumbnailsResponse) Descriptor() ([]byte, []int) {
	return file_proto_mediawiki_proto_rawDescGZIP(), []int{3}
}

func (x *GetThumbnailsResponse) GetThumbnails() map[string]*ThumbnailData {
	if x != nil {
		return x.Thumbnails
	}
	return nil
}

type ThumbnailData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Source        string                 `protobuf:"bytes,1,opt,name=source,proto3" json:"source,omitempty"`
	Width         uint32                 `protobuf:"varint,2,opt,name=width,proto3" json:"width,omitempty"`
	Height        uint32                 `protobuf:"varint,3,opt,name=height,proto3" json:"height,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ThumbnailData) Reset() {
	*x = ThumbnailData{}
	mi := &file_proto_mediawiki_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ThumbnailData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ThumbnailData) ProtoMessage() {}

func (x *ThumbnailData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mediawiki_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ThumbnailData.ProtoReflect.Descriptor instead.
func (*ThumbnailData) Descriptor() ([]byte, []int) {
	return file_proto_mediawiki_proto_rawDescGZIP(), []int{4}
}

func (x *ThumbnailData) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *ThumbnailData) GetWidth() uint32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *ThumbnailData) GetHeight() uint32 {
	if x != nil {
		return x.Height
	}
	return 0
}

type GetPagesInBboxRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// bbox format is of the form maxy|minx|miny|maxx
	Bbox          string `protobuf:"bytes,1,opt,name=bbox,proto3" json:"bbox,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPagesInBboxRequest) Reset() {
	*x = GetPagesInBboxRequest{}
	mi := &file_proto_mediawiki_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPagesInBboxRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPagesInBboxRequest) ProtoMessage() {}

func (x *GetPagesInBboxRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mediawiki_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPagesInBboxRequest.ProtoReflect.Descriptor instead.
func (*GetPagesInBboxRequest) Descriptor() ([]byte, []int) {
	return file_proto_mediawiki_proto_rawDescGZIP(), []int{5}
}

func (x *GetPagesInBboxRequest) GetBbox() string {
	if x != nil {
		return x.Bbox
	}
	return ""
}

type GetPagesInBboxResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Pages         []*WikiPageMetadata    `protobuf:"bytes,1,rep,name=pages,proto3" json:"pages,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPagesInBboxResponse) Reset() {
	*x = GetPagesInBboxResponse{}
	mi := &file_proto_mediawiki_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPagesInBboxResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPagesInBboxResponse) ProtoMessage() {}

func (x *GetPagesInBboxResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mediawiki_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPagesInBboxResponse.ProtoReflect.Descriptor instead.
func (*GetPagesInBboxResponse) Descriptor() ([]byte, []int) {
	return file_proto_mediawiki_proto_rawDescGZIP(), []int{6}
}

func (x *GetPagesInBboxResponse) GetPages() []*WikiPageMetadata {
	if x != nil {
		return x.Pages
	}
	return nil
}

type WikiPageMetadata struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Pageid        string                 `protobuf:"bytes,1,opt,name=pageid,proto3" json:"pageid,omitempty"`
	Views         uint64                 `protobuf:"varint,2,opt,name=views,proto3" json:"views,omitempty"`
	Title         string                 `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Lat           float32                `protobuf:"fixed32,4,opt,name=lat,proto3" json:"lat,omitempty"`
	Lon           float32                `protobuf:"fixed32,5,opt,name=lon,proto3" json:"lon,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WikiPageMetadata) Reset() {
	*x = WikiPageMetadata{}
	mi := &file_proto_mediawiki_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WikiPageMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WikiPageMetadata) ProtoMessage() {}

func (x *WikiPageMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mediawiki_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WikiPageMetadata.ProtoReflect.Descriptor instead.
func (*WikiPageMetadata) Descriptor() ([]byte, []int) {
	return file_proto_mediawiki_proto_rawDescGZIP(), []int{7}
}

func (x *WikiPageMetadata) GetPageid() string {
	if x != nil {
		return x.Pageid
	}
	return ""
}

func (x *WikiPageMetadata) GetViews() uint64 {
	if x != nil {
		return x.Views
	}
	return 0
}

func (x *WikiPageMetadata) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *WikiPageMetadata) GetLat() float32 {
	if x != nil {
		return x.Lat
	}
	return 0
}

func (x *WikiPageMetadata) GetLon() float32 {
	if x != nil {
		return x.Lon
	}
	return 0
}

var File_proto_mediawiki_proto protoreflect.FileDescriptor

const file_proto_mediawiki_proto_rawDesc = "" +
	"\n" +
	"\x15proto/mediawiki.proto\x12\tmediawiki\"+\n" +
	"\x0fGetViewsRequest\x12\x18\n" +
	"\apageids\x18\x01 \x03(\tR\apageids\"\x9b\x01\n" +
	"\x10GetViewsResponse\x12I\n" +
	"\n" +
	"page_views\x18\x01 \x03(\v2*.mediawiki.GetViewsResponse.PageViewsEntryR\tpageViews\x1a<\n" +
	"\x0ePageViewsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x04R\x05value:\x028\x01\"^\n" +
	"\x14GetThumbnailsRequest\x12\x14\n" +
	"\x05width\x18\x01 \x01(\rR\x05width\x12\x16\n" +
	"\x06height\x18\x02 \x01(\rR\x06height\x12\x18\n" +
	"\apageids\x18\x03 \x03(\tR\apageids\"\xc2\x01\n" +
	"\x15GetThumbnailsResponse\x12P\n" +
	"\n" +
	"thumbnails\x18\x01 \x03(\v20.mediawiki.GetThumbnailsResponse.ThumbnailsEntryR\n" +
	"thumbnails\x1aW\n" +
	"\x0fThumbnailsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12.\n" +
	"\x05value\x18\x02 \x01(\v2\x18.mediawiki.ThumbnailDataR\x05value:\x028\x01\"U\n" +
	"\rThumbnailData\x12\x16\n" +
	"\x06source\x18\x01 \x01(\tR\x06source\x12\x14\n" +
	"\x05width\x18\x02 \x01(\rR\x05width\x12\x16\n" +
	"\x06height\x18\x03 \x01(\rR\x06height\"+\n" +
	"\x15GetPagesInBboxRequest\x12\x12\n" +
	"\x04bbox\x18\x01 \x01(\tR\x04bbox\"K\n" +
	"\x16GetPagesInBboxResponse\x121\n" +
	"\x05pages\x18\x01 \x03(\v2\x1b.mediawiki.WikiPageMetadataR\x05pages\"z\n" +
	"\x10WikiPageMetadata\x12\x16\n" +
	"\x06pageid\x18\x01 \x01(\tR\x06pageid\x12\x14\n" +
	"\x05views\x18\x02 \x01(\x04R\x05views\x12\x14\n" +
	"\x05title\x18\x03 \x01(\tR\x05title\x12\x10\n" +
	"\x03lat\x18\x04 \x01(\x02R\x03lat\x12\x10\n" +
	"\x03lon\x18\x05 \x01(\x02R\x03lon2\xfb\x01\n" +
	"\tMediaWiki\x12C\n" +
	"\bGetViews\x12\x1a.mediawiki.GetViewsRequest\x1a\x1b.mediawiki.GetViewsResponse\x12R\n" +
	"\rGetThumbnails\x12\x1f.mediawiki.GetThumbnailsRequest\x1a .mediawiki.GetThumbnailsResponse\x12U\n" +
	"\x0eGetPagesInBbox\x12 .mediawiki.GetPagesInBboxRequest\x1a!.mediawiki.GetPagesInBboxResponseB\x13Z\x11proto/mediawikipbb\x06proto3"

var (
	file_proto_mediawiki_proto_rawDescOnce sync.Once
	file_proto_mediawiki_proto_rawDescData []byte
)

func file_proto_mediawiki_proto_rawDescGZIP() []byte {
	file_proto_mediawiki_proto_rawDescOnce.Do(func() {
		file_proto_mediawiki_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_mediawiki_proto_rawDesc), len(file_proto_mediawiki_proto_rawDesc)))
	})
	return file_proto_mediawiki_proto_rawDescData
}

var file_proto_mediawiki_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_proto_mediawiki_proto_goTypes = []any{
	(*GetViewsRequest)(nil),        // 0: mediawiki.GetViewsRequest
	(*GetViewsResponse)(nil),       // 1: mediawiki.GetViewsResponse
	(*GetThumbnailsRequest)(nil),   // 2: mediawiki.GetThumbnailsRequest
	(*GetThumbnailsResponse)(nil),  // 3: mediawiki.GetThumbnailsResponse
	(*ThumbnailData)(nil),          // 4: mediawiki.ThumbnailData
	(*GetPagesInBboxRequest)(nil),  // 5: mediawiki.GetPagesInBboxRequest
	(*GetPagesInBboxResponse)(nil), // 6: mediawiki.GetPagesInBboxResponse
	(*WikiPageMetadata)(nil),       // 7: mediawiki.WikiPageMetadata
	nil,                            // 8: mediawiki.GetViewsResponse.PageViewsEntry
	nil,                            // 9: mediawiki.GetThumbnailsResponse.ThumbnailsEntry
}
var file_proto_mediawiki_proto_depIdxs = []int32{
	8, // 0: mediawiki.GetViewsResponse.page_views:type_name -> mediawiki.GetViewsResponse.PageViewsEntry
	9, // 1: mediawiki.GetThumbnailsResponse.thumbnails:type_name -> mediawiki.GetThumbnailsResponse.ThumbnailsEntry
	7, // 2: mediawiki.GetPagesInBboxResponse.pages:type_name -> mediawiki.WikiPageMetadata
	4, // 3: mediawiki.GetThumbnailsResponse.ThumbnailsEntry.value:type_name -> mediawiki.ThumbnailData
	0, // 4: mediawiki.MediaWiki.GetViews:input_type -> mediawiki.GetViewsRequest
	2, // 5: mediawiki.MediaWiki.GetThumbnails:input_type -> mediawiki.GetThumbnailsRequest
	5, // 6: mediawiki.MediaWiki.GetPagesInBbox:input_type -> mediawiki.GetPagesInBboxRequest
	1, // 7: mediawiki.MediaWiki.GetViews:output_type -> mediawiki.GetViewsResponse
	3, // 8: mediawiki.MediaWiki.GetThumbnails:output_type -> mediawiki.GetThumbnailsResponse
	6, // 9: mediawiki.MediaWiki.GetPagesInBbox:output_type -> mediawiki.GetPagesInBboxResponse
	7, // [7:10] is the sub-list for method output_type
	4, // [4:7] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_proto_mediawiki_proto_init() }
func file_proto_mediawiki_proto_init() {
	if File_proto_mediawiki_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_mediawiki_proto_rawDesc), len(file_proto_mediawiki_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_mediawiki_proto_goTypes,
		DependencyIndexes: file_proto_mediawiki_proto_depIdxs,
		MessageInfos:      file_proto_mediawiki_proto_msgTypes,
	}.Build()
	File_proto_mediawiki_proto = out.File
	file_proto_mediawiki_proto_goTypes = nil
	file_proto_mediawiki_proto_depIdxs = nil
}
